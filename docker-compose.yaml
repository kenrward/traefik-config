version: "3.9"

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard
    environment:
      - CF_API_EMAIL=kenrward@gmail.com
      - CF_DNS_API_TOKEN=${CF_API}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yaml:/traefik.yaml:ro
      - ./dynamic.yaml:/dynamic.yaml:ro
      - /root/traefik-config/acme.json:/acme.json
    networks:
      - web

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8001:80/tcp"
    environment:
      TZ: 'America/Chicago'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped # Recommended but not required (DHCP needs NET_ADMIN)  
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole-ui.rule=Host(`pihole.kewar.org`)"
      - "traefik.http.routers.pihole-ui.entrypoints=websecure"
      - "traefik.http.routers.pihole-ui.tls=true"
      - "traefik.http.routers.pihole.tls.certresolver=letsencrypt"
      - "traefik.http.routers.pihole.tls.domains[0].main=pihole.domain.tld"
      - "traefik.http.routers.pihole.tls.domains[0].sans=pihole.domain.tld"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
    networks:
      - web

  # Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: unless-stopped
    ports:
      - "8088:8080"
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
      DOZZLE_FILTER: "status=running"
      # DOZZLE_FILTER: "label=log_me" # limits logs displayed to containers with this label
      # DOCKER_HOST: tcp://socket-proxy:2375 # enable when using socket proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # disable when using so
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dozzle-ui.rule=Host(`dozzle.kewar.org`)"
      - "traefik.http.routers.dozzle-ui.entrypoints=websecure"
      - "traefik.http.routers.dozzle-ui.tls=true"
      - "traefik.http.routers.dozzle.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dozzle.tls.domains[0].main=dozzle.kewar.org"
      - "traefik.http.routers.dozzle.tls.domains[0].sans=dozzle.kewar.org"
      - "traefik.http.services.dozzle.loadbalancer.server.port=8080"
    networks:
      - web


  # File Browser
  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: filebrowser
    restart: unless-stopped
    ports:
      - "8089:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # disable when using so
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.filebrowser-ui.rule=Host(`filebrowser.kewar.org`)"
      - "traefik.http.routers.filebrowser-ui.entrypoints=websecure"
      - "traefik.http.routers.filebrowser-ui.tls=true"
      - "traefik.http.routers.filebrowser.tls.certresolver=letsencrypt"
      - "traefik.http.routers.filebrowser.tls.domains[0].main=filebrowser.kewar.org"
      - "traefik.http.routers.filebrowser.tls.domains[0].sans=filebrowser.kewar.org"
      - "traefik.http.services.filebrowser.loadbalancer.server.port=80"
    networks:
      - web

  # Uptime Kuma
  uptime:
    image: louislam/uptime-kuma:latest
    container_name: uptime
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - './uptime/data:/app/data'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uptime-ui.rule=Host(`uptime.kewar.org`)"
      - "traefik.http.routers.uptime-ui.entrypoints=websecure"
      - "traefik.http.routers.uptime-ui.tls=true"
      - "traefik.http.routers.uptime.tls.certresolver=letsencrypt"
      - "traefik.http.routers.uptime.tls.domains[0].main=uptime.kewar.org"
      - "traefik.http.routers.uptime.tls.domains[0].sans=uptime.kewar.org"
      - "traefik.http.services.uptime.loadbalancer.server.port=3001"
    networks:
      - web

  # Home Assistant
  homeassistant:
    image: homeassistant/home-assistant:0.113.2
    container_name: homeassistant
    ports:
      - "8123:8123"
    networks:
      - web
    volumes:
      - ./homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homeassistant.entrypoints=websecure"
      - "traefik.http.routers.homeassistant.rule=Host(`homeassistant.kewar.org`)"
      - "traefik.http.routers.homeassistant.tls=true"
      - "traefik.http.routers.homeassistant.tls.certresolver=letsencrypt"
      - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8123"]
      interval: 2m
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always

networks:
  web:
    driver: bridge

